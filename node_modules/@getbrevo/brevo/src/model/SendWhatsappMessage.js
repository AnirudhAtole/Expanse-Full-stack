/*
 * Brevo API
 * Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  | 
 *
 * OpenAPI spec version: 3.0.0
 * Contact: contact@brevo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.32
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Brevo) {
      root.Brevo = {};
    }
    root.Brevo.SendWhatsappMessage = factory(root.Brevo.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The SendWhatsappMessage model module.
   * @module model/SendWhatsappMessage
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>SendWhatsappMessage</code>.
   * @alias module:model/SendWhatsappMessage
   * @class
   * @param senderNumber {String} WhatsApp Number with country code. Example, 85264318721
   * @param contactNumbers {Array.<String>} List of phone numbers of the contacts
   */
  var exports = function(senderNumber, contactNumbers) {
    this.senderNumber = senderNumber;
    this.contactNumbers = contactNumbers;
  };

  /**
   * Constructs a <code>SendWhatsappMessage</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SendWhatsappMessage} obj Optional instance to populate.
   * @return {module:model/SendWhatsappMessage} The populated <code>SendWhatsappMessage</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('templateId'))
        obj.templateId = ApiClient.convertToType(data['templateId'], 'Number');
      if (data.hasOwnProperty('text'))
        obj.text = ApiClient.convertToType(data['text'], 'String');
      if (data.hasOwnProperty('senderNumber'))
        obj.senderNumber = ApiClient.convertToType(data['senderNumber'], 'String');
      if (data.hasOwnProperty('contactNumbers'))
        obj.contactNumbers = ApiClient.convertToType(data['contactNumbers'], ['String']);
    }
    return obj;
  }

  /**
   * ID of the template to send
   * @member {Number} templateId
   */
  exports.prototype.templateId = undefined;

  /**
   * Text to be sent as message body (will be overridden if templateId is passed in the same request)
   * @member {String} text
   */
  exports.prototype.text = undefined;

  /**
   * WhatsApp Number with country code. Example, 85264318721
   * @member {String} senderNumber
   */
  exports.prototype.senderNumber = undefined;

  /**
   * List of phone numbers of the contacts
   * @member {Array.<String>} contactNumbers
   */
  exports.prototype.contactNumbers = undefined;


  return exports;

}));
