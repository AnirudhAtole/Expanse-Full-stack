/*
 * Brevo API
 * Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  | 
 *
 * OpenAPI spec version: 3.0.0
 * Contact: contact@brevo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.32
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Brevo) {
      root.Brevo = {};
    }
    root.Brevo.GetWhatsappEventReportEvents = factory(root.Brevo.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The GetWhatsappEventReportEvents model module.
   * @module model/GetWhatsappEventReportEvents
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>GetWhatsappEventReportEvents</code>.
   * @alias module:model/GetWhatsappEventReportEvents
   * @class
   * @param contactNumber {String} WhatsApp Number with country code. Example, 85264318721
   * @param _date {String} UTC date-time on which the event has been generated
   * @param messageId {String} Message ID which generated the event
   * @param event {module:model/GetWhatsappEventReportEvents.EventEnum} Event which occurred
   * @param senderNumber {String} WhatsApp Number with country code. Example, 85264318721
   */
  var exports = function(contactNumber, _date, messageId, event, senderNumber) {
    this.contactNumber = contactNumber;
    this._date = _date;
    this.messageId = messageId;
    this.event = event;
    this.senderNumber = senderNumber;
  };

  /**
   * Constructs a <code>GetWhatsappEventReportEvents</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/GetWhatsappEventReportEvents} obj Optional instance to populate.
   * @return {module:model/GetWhatsappEventReportEvents} The populated <code>GetWhatsappEventReportEvents</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('contactNumber'))
        obj.contactNumber = ApiClient.convertToType(data['contactNumber'], 'String');
      if (data.hasOwnProperty('date'))
        obj._date = ApiClient.convertToType(data['date'], 'String');
      if (data.hasOwnProperty('messageId'))
        obj.messageId = ApiClient.convertToType(data['messageId'], 'String');
      if (data.hasOwnProperty('event'))
        obj.event = ApiClient.convertToType(data['event'], 'String');
      if (data.hasOwnProperty('reason'))
        obj.reason = ApiClient.convertToType(data['reason'], 'String');
      if (data.hasOwnProperty('body'))
        obj.body = ApiClient.convertToType(data['body'], 'String');
      if (data.hasOwnProperty('mediaUrl'))
        obj.mediaUrl = ApiClient.convertToType(data['mediaUrl'], 'String');
      if (data.hasOwnProperty('senderNumber'))
        obj.senderNumber = ApiClient.convertToType(data['senderNumber'], 'String');
    }
    return obj;
  }

  /**
   * WhatsApp Number with country code. Example, 85264318721
   * @member {String} contactNumber
   */
  exports.prototype.contactNumber = undefined;

  /**
   * UTC date-time on which the event has been generated
   * @member {String} _date
   */
  exports.prototype._date = undefined;

  /**
   * Message ID which generated the event
   * @member {String} messageId
   */
  exports.prototype.messageId = undefined;

  /**
   * Event which occurred
   * @member {module:model/GetWhatsappEventReportEvents.EventEnum} event
   */
  exports.prototype.event = undefined;

  /**
   * Reason for the event (will be there in case of `error` and `soft-bounce` events)
   * @member {String} reason
   */
  exports.prototype.reason = undefined;

  /**
   * Text of the reply (will be there only in case of `reply` event with text)
   * @member {String} body
   */
  exports.prototype.body = undefined;

  /**
   * Url of the media reply (will be there only in case of `reply` event with media)
   * @member {String} mediaUrl
   */
  exports.prototype.mediaUrl = undefined;

  /**
   * WhatsApp Number with country code. Example, 85264318721
   * @member {String} senderNumber
   */
  exports.prototype.senderNumber = undefined;



  /**
   * Allowed values for the <code>event</code> property.
   * @enum {String}
   * @readonly
   */
  exports.EventEnum = {
    /**
     * value: "sent"
     * @const
     */
    sent: "sent",

    /**
     * value: "delivered"
     * @const
     */
    delivered: "delivered",

    /**
     * value: "read"
     * @const
     */
    read: "read",

    /**
     * value: "error"
     * @const
     */
    error: "error",

    /**
     * value: "unsubscribe"
     * @const
     */
    unsubscribe: "unsubscribe",

    /**
     * value: "reply"
     * @const
     */
    reply: "reply",

    /**
     * value: "soft-bounce"
     * @const
     */
    softBounce: "soft-bounce"
  };

  return exports;

}));
