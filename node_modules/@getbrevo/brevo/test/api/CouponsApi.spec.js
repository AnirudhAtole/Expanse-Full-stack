/*
 * Brevo API
 * Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  | 
 *
 * OpenAPI spec version: 3.0.0
 * Contact: contact@brevo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.32
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Brevo);
  }
}(this, function(expect, Brevo) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Brevo.CouponsApi();
  });

  describe('(package)', function() {
    describe('CouponsApi', function() {
      describe('createCouponCollection', function() {
        it('should call createCouponCollection successfully', function(done) {
          // TODO: uncomment, update parameter values for createCouponCollection call and complete the assertions
          /*
          var createCouponCollection = new Brevo.CreateCouponCollection();
          createCouponCollection.name = ;
          createCouponCollection.defaultCoupon = ;

          instance.createCouponCollection(createCouponCollection).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(Brevo.InlineResponse2012);
            expect(data.id).to.be.a('string');
            expect(data.id).to.be("23befbae-1505-47a8-bd27-e30ef739f32c");

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('createCoupons', function() {
        it('should call createCoupons successfully', function(done) {
          // TODO: uncomment, update parameter values for createCoupons call
          /*
          var createCoupons = new Brevo.CreateCoupons();
          createCoupons.collectionId = "23befbae-1505-47a8-bd27-e30ef739f32c";
          createCoupons.coupons = ["Uf12AF"];

          instance.createCoupons(createCoupons).then(function(data) {

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getCouponCollection', function() {
        it('should call getCouponCollection successfully', function(done) {
          // TODO: uncomment, update parameter values for getCouponCollection call and complete the assertions
          /*
          var id = "id_example";

          instance.getCouponCollection(id).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(Brevo.GetCouponCollection);
            expect(data.id).to.be.a('string');
            expect(data.id).to.be("23befbae-1505-47a8-bd27-e30ef739f32c");
            expect(data.name).to.be.a('string');
            expect(data.name).to.be("SummerPromotions");
            expect(data.defaultCoupon).to.be.a('string');
            expect(data.defaultCoupon).to.be("10 OFF");
            expect(data.createdAt).to.be.a(Date);
            expect(data.createdAt).to.be(2023-01-06T05:03:47.053000000Z);
            expect(data.totalCoupons).to.be.a('number');
            expect(data.totalCoupons).to.be(10000);
            expect(data.remainingCoupons).to.be.a('number');
            expect(data.remainingCoupons).to.be(5000);

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getCouponCollections', function() {
        it('should call getCouponCollections successfully', function(done) {
          // TODO: uncomment, update parameter values for getCouponCollections call and complete the assertions
          /*
          var opts = {};
          opts.limit = 50;
          opts.offset = 0;
          opts.sort = "desc";

          instance.getCouponCollections(opts).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(Brevo.GetCouponCollection);
            expect(data.id).to.be.a('string');
            expect(data.id).to.be("23befbae-1505-47a8-bd27-e30ef739f32c");
            expect(data.name).to.be.a('string');
            expect(data.name).to.be("SummerPromotions");
            expect(data.defaultCoupon).to.be.a('string');
            expect(data.defaultCoupon).to.be("10 OFF");
            expect(data.createdAt).to.be.a(Date);
            expect(data.createdAt).to.be(2023-01-06T05:03:47.053000000Z);
            expect(data.totalCoupons).to.be.a('number');
            expect(data.totalCoupons).to.be(10000);
            expect(data.remainingCoupons).to.be.a('number');
            expect(data.remainingCoupons).to.be(5000);

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('updateCouponCollection', function() {
        it('should call updateCouponCollection successfully', function(done) {
          // TODO: uncomment, update parameter values for updateCouponCollection call and complete the assertions
          /*
          var id = "id_example";
          var updateCouponCollection = new Brevo.UpdateCouponCollection();
          updateCouponCollection.defaultCoupon = "10 OFF";

          instance.updateCouponCollection(id, updateCouponCollection).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(Brevo.InlineResponse2001);
            expect(data.id).to.be.a('string');
            expect(data.id).to.be("23befbae-1505-47a8-bd27-e30ef739f32c");
            expect(data.name).to.be.a('string');
            expect(data.name).to.be("SummerPromotions");
            expect(data.defaultCoupon).to.be.a('string');
            expect(data.defaultCoupon).to.be("10 OFF");

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
